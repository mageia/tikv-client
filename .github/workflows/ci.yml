on: [push, pull_request]
name: Cross Compile

jobs:
  check:
    name: Check, Fmt, Clippy, Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.4.0

      - uses: actions-rs/cargo@v1
        with:
          command: check

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -A clippy::result-large-err -D warnings

  unit-test:
    name: unit test
    env:
      CARGO_INCREMENTAL: 0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.4.0
      - name: unit test
        run: make unit-test

  integration-test:
    name: integration test
    env:
      CARGO_INCREMENTAL: 0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.4.0
      - name: install tiup
        run: curl --proto '=https' --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh
      - name: start tiup playground
        run: |
          ~/.tiup/bin/tiup install tikv:nightly pd:nightly
          ~/.tiup/bin/tiup playground nightly --mode tikv-slim --kv 3 --without-monitor --kv.config config/tikv.toml --pd.config config/pd.toml &
          while :; do
            echo "waiting cluster to be ready"
            [[ "$(curl -I http://127.0.0.1:2379/pd/api/v1/regions 2>/dev/null | head -n 1 | cut -d$' ' -f2)" -ne "405" ]] || break
            sleep 1
          done
      - name: integration test
        run: MULTI_REGION=1 make integration-test
